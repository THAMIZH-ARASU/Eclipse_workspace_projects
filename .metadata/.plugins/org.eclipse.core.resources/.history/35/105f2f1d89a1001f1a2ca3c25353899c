package com.inventory.management;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.*;

@RestController
@RequestMapping("/api/products")
@CrossOrigin
public class ProductController {
	
	private final Map<Long, Product> productBuffer = new HashMap<>(); // For in-memory storage
    @Autowired
    private ProductService productService;

    @GetMapping
    public List<Product> getAllProducts() {
        return productService.getAllProducts();
    }

    @GetMapping("/{id}")
    public Product getProductById(@PathVariable Long id) {
        return productService.getProductById(id);
    }

    @PostMapping
    public Product addProduct(@RequestBody Product product) {
        return productService.addProduct(product);
    }

    @PutMapping("/{id}")
    public Product updateProduct(@PathVariable Long id, @RequestBody Product product) {
        return productService.updateProduct(id, product);
    }

    @DeleteMapping("/{id}")
    public void deleteProduct(@PathVariable Long id) {
        productService.deleteProduct(id);
    }
    
    

    @PostMapping("/save")
    public ResponseEntity<String> saveToBuffer(@RequestBody Product product) {
        productBuffer.put(product.getItemId(), product); // Add product to buffer
        return ResponseEntity.ok("Product saved to buffer");
    }

    @PostMapping("/commit")
    public ResponseEntity<String> commitChanges() {
        // Loop through buffer and persist each product to main table
        for (Product product : productBuffer.values()) {
            productService.saveToDatabase(product); // Method to save in PRODUCTS table
        }
        productBuffer.clear(); // Clear buffer after commit
        return ResponseEntity.ok("Changes committed to database");
    }
}